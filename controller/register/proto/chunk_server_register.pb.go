// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.36.6
// 	protoc        v5.29.3
// source: proto/chunk_server_register.proto

package chunkserver

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
	unsafe "unsafe"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type ChunkServer struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Address       string                 `protobuf:"bytes,1,opt,name=address,proto3" json:"address,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ChunkServer) Reset() {
	*x = ChunkServer{}
	mi := &file_proto_chunk_server_register_proto_msgTypes[0]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ChunkServer) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ChunkServer) ProtoMessage() {}

func (x *ChunkServer) ProtoReflect() protoreflect.Message {
	mi := &file_proto_chunk_server_register_proto_msgTypes[0]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ChunkServer.ProtoReflect.Descriptor instead.
func (*ChunkServer) Descriptor() ([]byte, []int) {
	return file_proto_chunk_server_register_proto_rawDescGZIP(), []int{0}
}

func (x *ChunkServer) GetAddress() string {
	if x != nil {
		return x.Address
	}
	return ""
}

type ChunkServerRegisterReq struct {
	state            protoimpl.MessageState `protogen:"open.v1"`
	MonitorAddress   string                 `protobuf:"bytes,1,opt,name=monitor_address,json=monitorAddress,proto3" json:"monitor_address,omitempty"`
	StreamingAddress string                 `protobuf:"bytes,2,opt,name=streaming_address,json=streamingAddress,proto3" json:"streaming_address,omitempty"`
	Space            int64                  `protobuf:"varint,3,opt,name=space,proto3" json:"space,omitempty"`
	unknownFields    protoimpl.UnknownFields
	sizeCache        protoimpl.SizeCache
}

func (x *ChunkServerRegisterReq) Reset() {
	*x = ChunkServerRegisterReq{}
	mi := &file_proto_chunk_server_register_proto_msgTypes[1]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ChunkServerRegisterReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ChunkServerRegisterReq) ProtoMessage() {}

func (x *ChunkServerRegisterReq) ProtoReflect() protoreflect.Message {
	mi := &file_proto_chunk_server_register_proto_msgTypes[1]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ChunkServerRegisterReq.ProtoReflect.Descriptor instead.
func (*ChunkServerRegisterReq) Descriptor() ([]byte, []int) {
	return file_proto_chunk_server_register_proto_rawDescGZIP(), []int{1}
}

func (x *ChunkServerRegisterReq) GetMonitorAddress() string {
	if x != nil {
		return x.MonitorAddress
	}
	return ""
}

func (x *ChunkServerRegisterReq) GetStreamingAddress() string {
	if x != nil {
		return x.StreamingAddress
	}
	return ""
}

func (x *ChunkServerRegisterReq) GetSpace() int64 {
	if x != nil {
		return x.Space
	}
	return 0
}

type RegisterResp struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Success       bool                   `protobuf:"varint,1,opt,name=success,proto3" json:"success,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *RegisterResp) Reset() {
	*x = RegisterResp{}
	mi := &file_proto_chunk_server_register_proto_msgTypes[2]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *RegisterResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RegisterResp) ProtoMessage() {}

func (x *RegisterResp) ProtoReflect() protoreflect.Message {
	mi := &file_proto_chunk_server_register_proto_msgTypes[2]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RegisterResp.ProtoReflect.Descriptor instead.
func (*RegisterResp) Descriptor() ([]byte, []int) {
	return file_proto_chunk_server_register_proto_rawDescGZIP(), []int{2}
}

func (x *RegisterResp) GetSuccess() bool {
	if x != nil {
		return x.Success
	}
	return false
}

var File_proto_chunk_server_register_proto protoreflect.FileDescriptor

const file_proto_chunk_server_register_proto_rawDesc = "" +
	"\n" +
	"!proto/chunk_server_register.proto\x12\vchunkserver\"'\n" +
	"\vChunkServer\x12\x18\n" +
	"\aaddress\x18\x01 \x01(\tR\aaddress\"\x84\x01\n" +
	"\x16ChunkServerRegisterReq\x12'\n" +
	"\x0fmonitor_address\x18\x01 \x01(\tR\x0emonitorAddress\x12+\n" +
	"\x11streaming_address\x18\x02 \x01(\tR\x10streamingAddress\x12\x14\n" +
	"\x05space\x18\x03 \x01(\x03R\x05space\"(\n" +
	"\fRegisterResp\x12\x18\n" +
	"\asuccess\x18\x01 \x01(\bR\asuccess2h\n" +
	"\x1aChunkServerRegisterService\x12J\n" +
	"\bRegister\x12#.chunkserver.ChunkServerRegisterReq\x1a\x19.chunkserver.RegisterRespB)Z'./controller/register/proto;chunkserverb\x06proto3"

var (
	file_proto_chunk_server_register_proto_rawDescOnce sync.Once
	file_proto_chunk_server_register_proto_rawDescData []byte
)

func file_proto_chunk_server_register_proto_rawDescGZIP() []byte {
	file_proto_chunk_server_register_proto_rawDescOnce.Do(func() {
		file_proto_chunk_server_register_proto_rawDescData = protoimpl.X.CompressGZIP(unsafe.Slice(unsafe.StringData(file_proto_chunk_server_register_proto_rawDesc), len(file_proto_chunk_server_register_proto_rawDesc)))
	})
	return file_proto_chunk_server_register_proto_rawDescData
}

var file_proto_chunk_server_register_proto_msgTypes = make([]protoimpl.MessageInfo, 3)
var file_proto_chunk_server_register_proto_goTypes = []any{
	(*ChunkServer)(nil),            // 0: chunkserver.ChunkServer
	(*ChunkServerRegisterReq)(nil), // 1: chunkserver.ChunkServerRegisterReq
	(*RegisterResp)(nil),           // 2: chunkserver.RegisterResp
}
var file_proto_chunk_server_register_proto_depIdxs = []int32{
	1, // 0: chunkserver.ChunkServerRegisterService.Register:input_type -> chunkserver.ChunkServerRegisterReq
	2, // 1: chunkserver.ChunkServerRegisterService.Register:output_type -> chunkserver.RegisterResp
	1, // [1:2] is the sub-list for method output_type
	0, // [0:1] is the sub-list for method input_type
	0, // [0:0] is the sub-list for extension type_name
	0, // [0:0] is the sub-list for extension extendee
	0, // [0:0] is the sub-list for field type_name
}

func init() { file_proto_chunk_server_register_proto_init() }
func file_proto_chunk_server_register_proto_init() {
	if File_proto_chunk_server_register_proto != nil {
		return
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: unsafe.Slice(unsafe.StringData(file_proto_chunk_server_register_proto_rawDesc), len(file_proto_chunk_server_register_proto_rawDesc)),
			NumEnums:      0,
			NumMessages:   3,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_proto_chunk_server_register_proto_goTypes,
		DependencyIndexes: file_proto_chunk_server_register_proto_depIdxs,
		MessageInfos:      file_proto_chunk_server_register_proto_msgTypes,
	}.Build()
	File_proto_chunk_server_register_proto = out.File
	file_proto_chunk_server_register_proto_goTypes = nil
	file_proto_chunk_server_register_proto_depIdxs = nil
}
